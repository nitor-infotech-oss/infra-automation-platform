---
- name: Include vm env var
  include_vars:
    file: vars/sit1.yml

- name: Check whether vhdx already exists
  win_stat:
    #path: "C:\\Users\\Public\\Documents\\Hyper-V\\Virtual hard disks\\packer-hyperv-iso.vhdx"
    path: "C:\\Users\\Public\\Documents\\Hyper-V\\Virtual hard disks\\web.vhdx"
    get_checksum: false
    get_md5: false
  with_items: "{{ vms }}"
  register: file_info

#- debug: var=file_info.results

- name: Clone vhdx 
  win_copy:
    #src: "D:\\Packer\\packer-templates\\output-hyperv-iso\\Virtual Hard Disks\\packer-hyperv-iso.vhdx"
    src: "D:\\web.vhdx"
    #dest: "C:\\Users\\Public\\Documents\\Hyper-V\\Virtual hard disks\\packer-hyperv-iso.vhdx"
    dest: "C:\\Users\\Public\\Documents\\Hyper-V\\Virtual hard disks\\web.vhdx"
    remote_src: True
  with_items: "{{ file_info.results }}"
  when: item.stat.exists == false
     
- name: Create VMs
  win_hyperv_guest:
    name: "{{item.name}}"
    generation: 1
    cpu: "{{item.cpu}}"
    memory: "{{item.memory}}"
    network_switch: "{{item.network_switch}}"
    diskpath: "{{item.dest_vhd}}"
    #imgpath: "{{item.img_path}}"
    state: present
  with_items: "{{ vms }}"
  register: new_vms


#- name: Configure VMs IP
  #win_hyperv_guest_config_net:
    #name: "{{item.name}}"
    #ip: "{{item.network.ip}}" 
    #netmask: "{{item.network.netmask}}"
    #gateway: "{{item.network.gateway}}"
    #dns: "{{item.network.dns}}"
    #type: static
  #with_items: "{{ vms }}"

#- debug: var=new_vms.results

#- add_host:
    #name: "{{ item.item.network.ip }}"
    #ansible_connection: winrm
    #ansible_host: "{{ item.item.network.ip }}"
    #groups: "{{item.item.type}}" 
  #with_items: "{{ new_vms.results }}"

- name: Poweron VMs
  win_hyperv_guest:
    name: "{{item.name}}"
    state: started 
  with_items: "{{ vms }}"
